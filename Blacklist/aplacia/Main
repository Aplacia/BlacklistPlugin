package aplacia;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.permissions.Permission;
import org.bukkit.plugin.java.JavaPlugin;

import listeners.BanCommand;
import listeners.OnJoinBanned;
import listeners.UnbanCommand;

public class Main extends JavaPlugin{
	public static ArrayList<String> BannedIP;
	public static ArrayList<String> BannedUUID;
	
	File configFile;
	FileConfiguration config;
	
	File logFile;
	FileConfiguration log;
	
	File ipsFile;
	FileConfiguration ips;
	
	File uuidsFile;
	FileConfiguration uuids;
	
	@Override
	public void onEnable() {
		configFile = new File(getDataFolder(), "config.yml");
		logFile = new File(getDataFolder(), "log.yml");
		ipsFile = new File(getDataFolder(), "ips.yml");
		uuidsFile = new File(getDataFolder(), "uuids.yml");
		
		try {
			firstRun();
		} catch (Exception e) {
			e.printStackTrace();
		}
		config = new YamlConfiguration();
		log = new YamlConfiguration();
		ips = new YamlConfiguration();
		uuids = new YamlConfiguration();
		loadYamls();
		
		this.initializeLists();	
		this.getCommand("ban").setExecutor(new BanCommand(this.log));
		this.getCommand("unban").setExecutor(new UnbanCommand(this.log));
		Bukkit.getPluginManager().registerEvents(new OnJoinBanned(), this);
	}
	
	@Override
	public void onDisable() {
		updateConfigs();
		saveYamls();
		
	}
	
	public void updateConfigs() {
		ips.set("ips", BannedIP);
		uuids.set("uuids", BannedUUID);
	}
	
	public void initializeLists() {
		BannedIP = (ArrayList<String>) ips.getStringList("ips");
		BannedUUID = (ArrayList<String>) uuids.getStringList("uuids");
	}
	
	public void addPerms() {
		Bukkit.getServer().getPluginManager().addPermission(new Permission("SimpleBlacklist.ban"));
		Bukkit.getServer().getPluginManager().addPermission(new Permission("SimpleBlacklist.unban"));
	}
	private void firstRun() throws Exception {
	    if(!configFile.exists()){
	        configFile.getParentFile().mkdirs();
	        copy(getResource("config.yml"), configFile);
	    }
	    if(!logFile.exists()){
	        logFile.getParentFile().mkdirs();
	        copy(getResource("log.yml"), logFile);
	    }
	    if(!ipsFile.exists()){
	        ipsFile.getParentFile().mkdirs();
	        copy(getResource("ips.yml"), ipsFile);
	    }
	    if(!uuidsFile.exists()){
	        uuidsFile.getParentFile().mkdirs();
	        copy(getResource("uuids.yml"), uuidsFile);
	    }
	}
	private void copy(InputStream in, File file) {
	    try {
	        OutputStream out = new FileOutputStream(file);
	        byte[] buf = new byte[1024];
	        int len;
	        while((len=in.read(buf))>0){
	            out.write(buf,0,len);
	        }
	        out.close();
	        in.close();
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	}
	public void saveYamls() {
	    try {
	        config.save(configFile);
	        log.save(logFile);
	        ips.save(ipsFile);
	        uuids.save(uuidsFile);
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	}
	public void loadYamls() {
	    try {
	        config.load(configFile);
	        log.load(logFile);
	        ips.load(ipsFile);
	        uuids.load(uuidsFile);
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	}
}


